{
    "compilerOptions": {
        /* Language and Environment */
        "target": "ES2020",
        "lib": ["ES2020", "DOM", "DOM.Iterable"],
        "jsx": "react-jsx",

        /* Modules */
        "module": "ESNext",                                  /* Specify what module code is generated. */
        "rootDir": "./",                                     /* Specify the root folder within your source files. */
        "moduleResolution": "Bundler",                       /* Specify how TypeScript looks up a file from a given module specifier. */
        "paths": { 
            "@lib/*": ["./src/*"],
            "@fix/*": ["./fix/*"]
         },

        /* Emit */
        "declaration": true,                              /* Generate .d.ts files from TypeScript and JavaScript files in your project. */
        "sourceMap": true,                                /* Create source map files for emitted JavaScript files. */
        "outDir": "./dist",                                   /* Specify an output folder for all emitted files. */
        "newLine": "lf",                                     /* Set the newline character for emitting files. */
        "stripInternal": true,                               /* Disable emitting declarations that have '@internal' in their JSDoc comments. */
        "esModuleInterop": true,                             /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */
        "forceConsistentCasingInFileNames": true,            /* Ensure that casing is correct in imports. */
        
        /* Type Checking */
        "strict": true,                                      /* Enable all strict type-checking options. */
        "noUnusedLocals": false,
        "noUnusedParameters": false,
        "noImplicitAny": true,                            /* Enable error reporting for expressions and declarations with an implied 'any' type. */
        "strictNullChecks": true,                         /* When type checking, take into account 'null' and 'undefined'. */
        "useUnknownInCatchVariables": true,               /* Default catch clause variables as 'unknown' instead of 'any'. */
        "alwaysStrict": true,                             /* Ensure 'use strict' is always emitted. */
        "exactOptionalPropertyTypes": true,               /* Interpret optional property types as written, rather than adding 'undefined'. */
        "noImplicitReturns": true,                        /* Enable error reporting for codepaths that do not explicitly return in a function. */
        "noFallthroughCasesInSwitch": true,               /* Enable error reporting for fallthrough cases in switch statements. */
        "noUncheckedIndexedAccess": true,                 /* Add 'undefined' to a type when accessed using an index. */
        
        /* Completeness */
        "skipLibCheck": false                             /* Skip type checking all .d.ts files. */
    },
    "files": ["fix/fonts.ts"],
    "include": ["src"],
    "exclude": ["dist", "node_modules/" ],
    "references": [{ "path": "./tsconfig.fix.json" }]
}
